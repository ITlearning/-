# 피보나치 수열: 메모이제이션 동작 분석

# 메모이제이션을 사용하는 경우 피보나치 수열 함수의 시간 복잡도는 O(N)이다.

# 동작방법은, 이미 계산이 끝난 것들은 메모이제이션 리스트에 넣어주고 필요할때마다 꺼내서 사용을 하는 방식이므로
# 기존의 재귀적 방법으로는 끝까지 들어갔다 나왔다를 모든 문제에서 수행을 했지만,
# 메모이제이션을 사용함에 따라서 필요한 수가 있고, 그 수가 이미 구해진 것이라면 
# 더 들어가지 않고서도 문제를 풀 수 있게 되고, 결과적으로 혁신적인 속도를 구현할 수 있게 됐다.

d = [0] * 100

def fibo(x):
    print('f(' + str(x) + ')', end=' ')
    if x == 1 or x == 2:
        return 1
    if d[x] != 0:
        return d[x]
    d[x] = fibo(x-1) + (x-2)
    return d[x]

print(6)

# 이렇게 돌릴경우, 숫자는 6,5,4,3,2,1,2,3,4 가 나오게 된다. 1 이후 부터의 수는 이미 계산이 되어있어서 각 원하는 수를 꺼내왔다.